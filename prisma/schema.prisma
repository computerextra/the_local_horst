generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "Account_userId_fkey")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "Session_userId_fkey")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean   @default(false)
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Anschprechpartner {
  id            String       @id
  Name          String
  Telefon       String?
  Mobil         String?
  Mail          String?
  lieferantenId String?
  Lieferanten   Lieferanten? @relation(fields: [lieferantenId], references: [id], onDelete: Cascade)

  @@index([lieferantenId], map: "Anschprechpartner_lieferantenId_fkey")
}

model Aussteller {
  id            Int     @id
  Artikelnummer String  @db.VarChar(255)
  Artikelname   String  @db.VarChar(255)
  Specs         String  @db.Text
  Preis         Decimal @db.Decimal(10, 2)
  Bild          String? @db.Text
}

model Einkauf {
  id            String      @id
  Paypal        Boolean
  Abonniert     Boolean
  Geld          String?
  Pfand         String?
  Dinge         String?     @db.LongText
  mitarbeiterId String      @unique
  Abgeschickt   DateTime?
  Bild1         String?
  Bild2         String?
  Bild3         String?
  Bild1Date     DateTime?
  Bild2Date     DateTime?
  Bild3Date     DateTime?
  Mitarbeiter   Mitarbeiter @relation(fields: [mitarbeiterId], references: [id])
}

model Lieferanten {
  id                String              @id
  Firma             String
  Kundennummer      String?
  Webseite          String?
  Anschprechpartner Anschprechpartner[]
}

model Mitarbeiter {
  id                 String    @id @unique
  Name               String
  Short              String?
  Gruppenwahl        String?
  InternTelefon1     String?
  InternTelefon2     String?
  FestnetzAlternativ String?
  FestnetzPrivat     String?
  HomeOffice         String?
  MobilBusiness      String?
  MobilPrivat        String?
  Email              String?
  Azubi              Boolean?
  Geburtstag         DateTime?
  Einkauf            Einkauf?
}

model Warenlieferung {
  id            Int       @id
  Name          String
  angelegt      DateTime  @default(now())
  geliefert     DateTime?
  AlterPreis    Decimal?  @default(0.000000000000000000000000000000)
  NeuerPreis    Decimal?  @default(0.000000000000000000000000000000)
  Preis         DateTime?
  Artikelnummer String
}

model fischer {
  username String @id @db.VarChar(255)
  password String @db.Text
  count    Int
}

model pdfs {
  id    Int    @id @default(autoincrement())
  title String @db.VarChar(255)
  body  String @db.Text

  @@fulltext([title, body])
}

model shorts {
  id     Int     @id @default(autoincrement())
  origin String  @db.VarChar(500)
  short  String  @unique(map: "short") @db.VarChar(255)
  count  Int?
  user   String? @db.VarChar(255)
}
